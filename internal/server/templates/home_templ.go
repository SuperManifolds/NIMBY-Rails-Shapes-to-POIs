// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.924
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Home() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<header><h1>NIMBY Rails Shape to POI Converter</h1><p>Convert geographic data files into NIMBY Rails POI mods</p></header><main><div class=\"card\"><h2>Upload Files</h2><p>Upload shapefile (.shp), KML (.kml), or KMZ (.kmz) files to convert them into NIMBY Rails POI mods.</p><form hx-post=\"/upload\" hx-target=\"#result-area\" hx-encoding=\"multipart/form-data\" hx-indicator=\"#upload-spinner\"><div class=\"upload-area\" ondrop=\"handleDrop(event)\" ondragover=\"handleDragOver(event)\" ondragleave=\"handleDragLeave(event)\"><input type=\"file\" name=\"files\" multiple accept=\".shp,.kml,.kmz\" required id=\"file-input\"><div class=\"upload-click-area\"><div class=\"upload-icon\">üìÅ</div><h3>Click to select files or drag & drop</h3><p>Supported formats: .shp, .kml, .kmz</p><div id=\"file-list\"></div></div></div><div class=\"form-group\"><label for=\"output-name\">Mod Name (optional)</label> <input type=\"text\" id=\"output-name\" name=\"output-name\" placeholder=\"my-awesome-mod\"></div><div class=\"form-group\"><label for=\"interpolate-distance\">Point Interpolation Distance (optional)</label> <input type=\"number\" id=\"interpolate-distance\" name=\"interpolate-distance\" placeholder=\"500\" min=\"10\" max=\"10000\" step=\"10\"> <small>Add extra points along lines if segments are longer than this distance (meters). Leave empty to disable.</small></div><button type=\"submit\" class=\"btn\" id=\"submit-button\"><span id=\"upload-spinner\" class=\"spinner hidden\"></span> <span id=\"button-text\">Convert to NIMBY Rails Mod</span></button></form></div><div id=\"result-area\"><!-- Results will be displayed here via HTMX --></div></main><footer><h3>About</h3><p>This tool converts geographic data files into NIMBY Rails mod files containing Points of Interest (POI).</p><p><strong>Supported formats:</strong> Shapefiles (.shp), KML (.kml), KMZ (.kmz)</p></footer>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("NIMBY Rails Shape-to-POI Converter").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
